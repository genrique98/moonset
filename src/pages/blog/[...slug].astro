---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import Blockquote from "../../mdx-components/Blockquote.astro";
import Subheader from "../../mdx-components/Subheader.astro";

// const components = await Astro.glob('../../mdx-components/*.astro');

const posts = await getCollection("blog");
export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const MAX_POSTS = 3;
const getRelatedPosts = (post: Props) => {
	const lowercaseTags = post.data.tags.map((tag) => tag.toLowerCase());
	const relatedPosts = posts.filter(
		(p) =>
			p.slug !== post.slug &&
			p.data.tags.some((t) => lowercaseTags.includes(t.toLowerCase())),
	);
	return relatedPosts.slice(0, MAX_POSTS);
};

const relatedPosts = getRelatedPosts(post);

const { Content, headings } = await post.render();
---

<BlogPost id={post.id} data={post.data} headings={headings}>
	<Content components={{ blockquote: Blockquote, h2: Subheader }} />
</BlogPost>
